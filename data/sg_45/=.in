########################################################################
# this file is part of the FPLO bandstructure package
# it was created automatically
# please dont delete this file nor
# edit it directly, unless you really know what you are doing
# Use FEDIT to change its content
#
########################################################################
section header{

    struct {char[*] mainversion;char[*] subversion;} version
    ={"23.00","M-CPA"};


    struct {char[*] hostname;char[*] date;char[*] by;} last_changes
    ={"mi2-Precision-5820-Tower","Wed Jan 29 13:46:26 2025","fedit (23.00-65-x86_64)"};

    char[*] compound="Al example";
};


section structure_information{

    struct {int type;char[*] description;} structure_type
    ={1,"Crystal   "};


    struct {char[*] number;char[*] setting;char[*] symbol;} spacegroup
    ={"1","default","P 1"};

    int subgroupgenerators[*]={
    };

    struct {int type;char[*] description;} lengthunit
    ={2,"Angstroem "};

    real lattice_constants[3]={16.18146322,16.18146323,16.1814636
    };
    real axis_angles[3]={93.57391612000001,117.97324909,117.94375276
    };

    struct {logical active;real newx[3];real newz[3];} cellrotation
    ={f,{1,0,0},{0,0,1}};

    int max_L=4;
    int nsort=104;

    struct {char[2] element;real tau[3];} wyckoff_positions[nsort]
    ={
        {"As",{0.12162372,-0.06829818,-2/11}}
        ,{"As",{0.15686471,-0.41532605,-0.01988846}}
        ,{"As",{1/4,-0.13801868,-0.3621076}}
        ,{"As",{1/4,-0.25506694,-0.24539282}}
        ,{"As",{0.10229055,0.42722555,-0.41725645}}
        ,{"As",{0.11543867,0.18376431,-0.19426285}}
        ,{"As",{0.12197284,-0.30970152,0.30573715}}
        ,{"As",{0.00967412,-0.24493306,0.00512083}}
        ,{"As",{0.34319155,-0.47848109,-0.08475605}}
        ,{"As",{0.11357485,0.4311683,0.30998904}}
        ,{"As",{0.1037182,0.17617603,-0.47890426}}
        ,{"As",{0.39372504,-0.02151891,0.32167264}}
        ,{"As",{0.37937592,-0.319299,-0.43115014}}
        ,{"As",{-0.38456133,-0.19029848,-0.06832564}}
        ,{"As",{0.47894807,0.48924705,-0.26085641}}
        ,{"As",{0.37882074,0.19641419,-0.19001096}}
        ,{"As",{0.38652221,-0.30339969,0.31822403}}
        ,{"As",{0.39543759,-0.08467395,0.07219076}}
        ,{"As",{0.34491972,0.32382397,0.42754217}}
        ,{"As",{0.24989654,0.01075295,0.48970102}}
        ,{"As",{-0.15680845,-0.0720524,-0.17832736}}
        ,{"As",{0.27591109,0.38791098,0.1378924}}
        ,{"As",{0.155518,0.07277445,0.17506499}}
        ,{"As",{-1/4,-0.00455329,-0.49487917}}
        ,{"As",{-0.22408891,-0.36198132,-0.11199989}}
        ,{"As",{-0.34313529,-0.32324683,-0.42780924}}
        ,{"As",{-0.3962818,0.08262245,-0.07245783}}
        ,{"As",{-0.38642515,0.30358581,-0.31759345}}
        ,{"As",{-0.37837628,-0.19660031,0.1899219}}
        ,{"As",{-0.49032588,-0.49544671,0.25460718}}
        ,{"As",{0.38814886,0.18947394,0.06884986}}
        ,{"As",{-0.37802716,0.31623569,0.43167436}}
        ,{"As",{-0.39770945,0.01954699,-0.32493501}}
        ,{"As",{-0.10456241,-0.17675317,0.48011154}}
        ,{"As",{-0.11347779,-0.43170182,-0.3100781}}
        ,{"As",{-0.344482,0.48045301,0.08274355}}
        ,{"As",{-0.02105193,0.23980448,-0.01029898}}
        ,{"As",{-0.12062408,0.31052606,-0.30132508}}
        ,{"As",{-0.11185114,-0.180701,0.19867492}}
        ,{"As",{-0.10627496,-0.4279476,0.41524395}}
        ,{"As",{-1/4,0.11208902,0.38800011}}
        ,{"As",{-0.25010346,0.26019552,0.23914359}}
        ,{"As",{-0.15508028,0.41737755,0.02109574}}
        ,{"As",{-0.12117926,0.0688317,0.18240655}}
        ,{"Mn",{0.25089839,0.1252988,-0.12437134}}
        ,{"Mn",{0.25032986,-0.37526973,0.37562866}}
        ,{"Mn",{-0.24967014,0.3747012,-0.37440041}}
        ,{"Mn",{-0.24910161,-0.12473027,0.12559959}}
        ,{"Sr",{0.14832835,-1/4,-0.10167165}}
        ,{"Sr",{0.02408865,-0.25795786,-0.37276515}}
        ,{"Sr",{0.03453735,-0.21263508,0.40650076}}
        ,{"Sr",{0.0837987,-0.47836073,-0.25101961}}
        ,{"Sr",{0.35539037,-0.02495065,-0.12365176}}
        ,{"Sr",{0.11913584,0.37196341,-0.09349924}}
        ,{"Sr",{0.10044377,0.12828135,-0.01893548}}
        ,{"Sr",{0.14501062,-0.37592072,-0.47465868}}
        ,{"Sr",{0.41998774,-0.24643636,-0.02393305}}
        ,{"Sr",{0.14909539,-0.09895735,0.25323822}}
        ,{"Sr",{0.47551355,-0.12843897,-0.24304158}}
        ,{"Sr",{0.35278317,-0.11937925,0.48106452}}
        ,{"Sr",{0.35219557,-0.40104265,-0.25194726}}
        ,{"Sr",{0.22734112,-0.02163927,0.06215944}}
        ,{"Sr",{0.27548575,0.3347275,-0.24847613}}
        ,{"Sr",{0.22250332,-0.25356364,0.1664241}}
        ,{"Sr",{0.27090221,0.4349039,-0.47839963}}
        ,{"Sr",{0.10041508,0.47171922,0.11934188}}
        ,{"Sr",{0.14762266,0.0189268,-0.38065812}}
        ,{"Sr",{-0.39955623,-0.38062075,-0.02783758}}
        ,{"Sr",{0.08669647,0.0650961,0.33599831}}
        ,{"Sr",{0.11911603,0.24801495,0.21322144}}
        ,{"Sr",{-0.4162013,-0.16518169,-0.43784056}}
        ,{"Sr",{-0.38086416,-0.28736492,-0.25282757}}
        ,{"Sr",{0.35161788,1/4,-0.39838212}}
        ,{"Sr",{-0.47591135,-0.1031462,0.28204651}}
        ,{"Sr",{0.40129889,-0.47904213,0.37634824}}
        ,{"Sr",{-0.38088397,0.40589459,-0.12889892}}
        ,{"Sr",{0.38519271,-0.3968538,0.12723485}}
        ,{"Sr",{-0.39958492,0.4810732,-0.37130414}}
        ,{"Sr",{0.46520648,0.09410541,-0.28677856}}
        ,{"Sr",{-0.35167165,-1/4,0.39832835}}
        ,{"Sr",{0.38539739,0.28144487,0.25695842}}
        ,{"Sr",{0.41679637,0.1652725,0.44075825}}
        ,{"Sr",{-0.11480729,-0.24204214,-0.21795349}}
        ,{"Sr",{-0.08001226,-0.05607921,-0.3335759}}
        ,{"Sr",{0.40126204,0.3803307,0.02534132}}
        ,{"Sr",{-0.14460963,-0.02095787,0.38034102}}
        ,{"Sr",{-0.09870111,-0.47504935,-0.11965898}}
        ,{"Sr",{-0.27749668,-0.44392079,0.47606695}}
        ,{"Sr",{-0.22909779,0.24930184,-0.16400169}}
        ,{"Sr",{-3/11,-0.33481831,0.24898039}}
        ,{"Sr",{-0.22451425,0.02396188,-0.05924175}}
        ,{"Sr",{-0.35090461,0.39585717,0.24805274}}
        ,{"Sr",{-0.35498938,0.1196693,-0.47906866}}
        ,{"Sr",{-0.46546265,0.12803659,0.24717243}}
        ,{"Sr",{-0.14780443,0.10414283,-0.24676178}}
        ,{"Sr",{-0.41330353,0.25069816,0.02160037}}
        ,{"Sr",{-0.14721683,0.37171865,0.47216242}}
        ,{"Sr",{-0.09873796,-0.12407928,0.02093134}}
        ,{"Sr",{-0.11460261,-0.37156103,0.10395252}}
        ,{"Sr",{-0.35237734,0.02828078,0.12869586}}
        ,{"Sr",{-0.08320363,0.47603812,0.25152387}}
        ,{"Sr",{-0.02448645,0.21855513,-0.39604748}}
        ,{"Sr",{-0.03479352,0.25198505,0.37110108}}
        ,{"Sr",{-0.14838212,1/4,0.10161788}}
    };

};


section structure_dependend{

    struct {char[2] atom;real concentration;} concentrations[nsort]
    ={
        {"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"As",1}
        ,{"Mn",1}
        ,{"Mn",1}
        ,{"Mn",1}
        ,{"Mn",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
        ,{"Sr",1}
    };


    struct {char[2] element;real split;} initial_spin_split[nsort]
    ={
        {"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"As",2}
        ,{"Mn",2}
        ,{"Mn",2}
        ,{"Mn",2}
        ,{"Mn",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
        ,{"Sr",2}
    };


    struct {int sort;char[2] state;real spinup[7];real spindn[7];} core_occupation[*]
    ={
    };


    struct {char[20] label;real kpoint[3];} special_sympoints[*]
    ={
        {"Y",{-0.34287680790966,-0.50097428929684,0}}
        ,{"$~G",{0,0,0}}
        ,{"U",{0.34287683067666,-0.03122881363199,-1/2}}
        ,{"<BREAK>",{0,0,0}}
        ,{"R",{0,-0.53220310292881,-1/2}}
        ,{"$~G",{0,0,0}}
        ,{"Z",{0.34317045646006,0.03122881363199,1/2}}
        ,{"<BREAK>",{0,0,0}}
        ,{"T",{0.0002936485504,-0.46974547566485,1/2}}
        ,{"$~G",{0,0,0}}
        ,{"X",{0.68604728713672,0,0}}
        ,{"<BREAK>",{0,0,0}}
        ,{"V",{0.34317047922704,-0.50097428929684,0}}
        ,{"$~G",{0,0,0}}
    };

};


section mesh{

    struct {int nr;real rmin;real rmax;real rmax_factor;} radial_mesh
    ={200,1.0e-5,0.0,1.0};


    struct {int nr;real rmin;real rmax;} atom_radial_mesh
    ={2000,1.0e-7,0.0};

};


section brillouin{

    struct {logical metal;int nkxyz[3];} bzone_integration
    ={t,{12,12,12}};


    struct {int ne;real range;real width;int norder;} mp_bzone_integration
    ={1001,5.0,0.005,0};


    struct {int type;char[*] description;} bzone_method
    ={1,"tetrahedron method"};


    struct {int type;char[*] description;} bzintmethod
    ={1,"primitive cell"};

    real bzone_kT=100.0;
    int nband=-1;
};


section bandstructure_plot{

    struct {logical bandplot;logical read_sympoints;int ndivisions;real emin;real emax;int nptdos;logical plot_idos;logical plot_ndos;logical restrict_bands_to_window;logical coeffout;} bandplot_control
    ={f,t,50,-20.0,20.0,1000,f,f,f,f};


    struct {logical bandweights;logical bweight_rot;real z_axis[3];real x_axis[3];char[*] bwdfilename;
        struct {int type;char[*] description;} frelprojection;
    } bandweight_control
    ={f,f,{0.0,0.0,1.0},{1.0,0.0,0.0},""
        ,{1,"jmu"}
    };

};


section iteration_control{

    struct {int steps;real tolerance;real mixing;int maxdim;real progress;} iteration_control
    ={100,1.e-6,0.4,5,0.1};


    struct {int scheme;char[*] description;} iteration_version
    ={2,"Iterat   : Hyperspace interpolation"};


    struct {int type;char[*] description;} iteration_convergence_condition
    ={2,"Density"};

    real etot_tolerance=1.e-8;
    # ratio of things put into iteration vector compared 
    # to density 

    struct {real U;} iterationvector_ratio
    ={1.0};

};


section forces{

    struct {int steps;real tolerance;int maxdim;} force_iteration_control
    ={100,1.0e-3,0};


    struct {int scheme;char[*] description;} force_iteration_version
    ={6,"MinIterat: Find minimum with iterat"};

    logical force_in_each_step=f;
    logical approx_nodndL_ewald=f;

    struct {int mode;char[*] description;} force_mode
    ={1,"No forces"};

    int geomopt_sites[*]={
    };
};


section options{

    struct {int mspin;logical initial_spin_split;} spin
    ={1,f};


    struct {int type;char[*] description;} xc_potential
    ={10,"Perdew Burke Ernzerhof 96    (GGA)"};


    struct {logical overwrite_cmBJ;real cmBJ;} mBJcontrols
    ={f,1};

    real ex_field_strength=1.0;

    struct {int type;char[*] description;} relativistic
    ={2,"scalar relativistic"};


    struct {int type;char[*] description;} nuclear_model
    ={1,"Point charge"};


    struct {
        struct {int type;char[*] description;} chargemode;
        real ionicity;logical make_vca;
        struct {int sort;real Z;} vca[*];
    } charges
    ={
         {1,"None"}
        ,0.0,f
        ,{
        }
    };


    struct {int type;char[*] description;} spin_pop_type
    ={3,"exact expression (expensive)"};

    real quantization_axis[3]={0,0,1
    };
    flag options[*]={CALC_DOS(-),NOT_USED(-),FULLBZ(-),CALC_PLASMON_FREQ(-)
    ,EMPTY_LATTICE_TEST(-),NO_DOS(-),PLOT_REALFUNC(-),PLOT_BASIS(-)
    ,TEST_LOI(-),TEST_DIAGNO(-),TEST_SYMMETRIZATION(-),TEST_HS_SYM(-)
    ,PROT_PRINT_BASIS(-),PROT_MAKELATTICE(-),PROT_STRUCTURE_PRNT(-),PROT_TCI(-)
    ,NOT_USED(-),NOT_USED(-),NOT_USED(-),NO_SYMMETRYTEST(+)
    ,NO_POTENTIAL(-),NOT_USED(-),NO_CORE(-),NOT_USED(-)
    ,NO_POPANALYSIS(-),NO_LOI(-),NO_BASIS(-),NO_EFCH(-)
    ,NOT_USED(-),NOT_USED(-),NOT_USED(-)
    };

    struct {int type;char[*] description;} verbosity_level
    ={200,"more information"};


    struct {real moment;logical fsm;} fsmoment
    ={1.0,f};

    logical calc_etot=t;
    logical usedatadirectories=f;
};


section cpa{

    struct {real emin0;real emax0;int nec;int max_se_loops;real eimag;} cpa_control
    ={-1.60,0.4,30,10,1.0e-5};


    struct {real efermi0;real slop_0;real slop_min;int max_ef_loops;} cpa_fermi_control
    ={0.08,30.0,0.3,10};


    struct {int type;char[*] description;} cpa_fermi_method
    ={1,"secant method"};


    struct {int ne;real eimag;} cpa_dos
    ={1000,1.e-3};


    struct {int ne;real eimag;} cpa_bloch_spectral_density
    ={100,1.e-3};

};


section numerics{

    struct {int degree;} interpolation
    ={8};


    struct {int nr;} one_center_integrals
    ={200};


    struct {int nxi;int neta;} coulomb_energy_calc
    ={26,46};


    struct {int nr;int neta;} overlap_density_calc
    ={50,20};


    struct {real dens;real pot;real orbital;} cutoff_tolerances
    ={1.e-9,1.e-12,1.e-8};

    #WARNING: cutoff is obsolete now

    struct {real cutoff;real eps_r;real eps_g;} ewald_parameter
    ={2.0,1.0e-5,1.0e-5};


    struct {int nr;int angular_mesh_type_min;int angular_mesh_type_max;logical use_symmetry;} three_center_integrals
    ={80,3,15,t};


    struct {real tol;} symtest
    ={5.0e-13};

    # WARNING: nfft_ewp_per_site is obsolete now  
    int nfft_ewp_per_site=-500;
};


section LSDA_U{
    logical make_lsdau=f;

    struct {int type;char[*] description;} lsdau_projection
    ={1,"orthogonal"};


    struct {int type;char[*] description;} lsdau_functional
    ={1,"LSDA+U Around mean field (AMF/OP)"};


    struct {int type;char[*] description;} lsdau_dmat_mode
    ={1,"self consistent"};

    real lsdau_dmat_deviation=1.e-2;

    struct {int sort;char[2] state;real f_slater[4];} lsdau_defs[*]
    ={
    };

};


section OPC{
    logical make_opc=f;

    struct {int type;char[*] description;} opc_projection
    ={1,"orthogonal"};


    struct {int type;char[*] description;} opc_functional
    ={1,"Spin dependend (Nordstroem, Brooks, Johansson, JPhysC 4, 3261 (1992))"};


    struct {int sort;char[2] state;} opc_defs[*]
    ={
    };

};


section Advanced_output{
    int ldossites[*]={
    };
    logical grids_active=f;
    logical grids_stop_after=f;

    struct {
        struct {int type;char[*] description;} basis;
        real direction1[3];real direction2[3];real direction3[3];real origin[3];int subdivision[3];char[*] file;logical InclPeriodicPoints;logical createOpenDX;
        struct {int type;char[*] description;} quantities[*];
        struct {int type;char[*] description;} outputdata[*];
        real scfwavefnctwindow[2];
        struct {char[*] name;
            struct {real emin;real emax;real de;
                struct {int type;char[*] description;} spin;
            } sections[*];
        } energywindows[*];
        struct {char[*] name;real kpoint[3];int bandindices[*];real energywindow[2];} kresolved[*];
    } grids[*]
    ={
    };


    struct {logical active;logical forceusewanniercenters;int homooffset;
        struct {int nint;int nky;} wanniercenters;
    } topological_insulator
    ={f,f,4
        ,{40,100}
    };


    struct {logical active;logical jointdos;logical bandoutput;logical stopafter;
        struct {int ne;real emin;real emax;} energy;
    } optics
    ={f,f,f,f
        ,{1000,0,10}
    };

};


section BasisSettings{

    struct {
        struct {int type;char[*] description;} version;
        int extensionlevel;logical add3d;logical addf;char[*] core4f_by_el[*];int core4f_by_sort[*];char[*] core4fNovalenceF_by_el[*];int core4fNovalenceF_by_sort[*];
        struct {real Q;real S;} multicore[*];
        struct {real Q;real S;} multisemicore[*];
    } basis
    ={
         {1,"default FPLO9 basis"}
        ,1,f,f,{},{},{},{}
        ,{
        }
        ,{
        }
    };

};


section dHvA{

    struct {logical active;int bandsup[*];int bandsdown[*];real isovalue;int subdiv[3];int bisections;char[*] wandata;logical deleteoldfiles;logical needbandweights;char[*] statefile;
        struct {int weightindex;real coef;} energyshift[*];
    } isosurface
    ={f,{},{},0.,{12,12,12},0,"",t,f,""
        ,{
        }
    };


    struct {
        struct {char[*] label;real field[3];} fields[*];
        int bands[*];int parts[*];
        struct {int type;char[*] description;} spin;
        int nphi;int phifrom;int phito;int nplane;int planefrom;int planeto;real areachainthreshold;real orbitcomparisonsearchoffset;real orbitsampleportion;real arearadiusfactor;real smoothnessthreshold;flag outputoptions[*];flag debugoptions[*];
    } dhva
    ={
         {
            {"[010]",{0.,1.,0.}}
            ,{"[001]",{0.,0.,1.}}
        }
        ,{},{}
        ,{0,"both"}
        ,30,-1,-2,100,-1,-2,0.1,0.2,0.1,1.,1.,{show_non_closed(-),output_orbits(-),output_extremal_orbits(+)},{determine_area_chain_extrema(-),sort_area_chains(-),sort_extrema_chains(-),extend_periodic_area_chains(-)
        ,collect_orbits(-),calc_orbit(-),run(+)}
    };

};


